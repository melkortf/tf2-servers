name: Update package

on:
  workflow_dispatch:
    inputs:
      package:
        type: choice
        required: true
        options:
          - metamod
          - sourcemod
          - etf2l_configs
          - f2_sourcemod_plugins
          - tf2_comp_fixes

      version:
        type: string
        required: true

jobs:
  resolve-package-variables:
    runs-on: ubuntu-latest
    outputs:
      packageName: ${{ steps.resolve.outputs.packageName }}
      packagePath: ${{ steps.resolve.outputs.packagePath }}
      variablePrefix: ${{ steps.resolve.outputs.variablePrefix }}

    steps:
      - id: resolve
        name: Resolve package variables
        run: |
          case ${{ inputs.package }} in
            metamod)
              echo "package_name=Metamod:Source" >> "$GITHUB_ENV"
              echo "packagePath=packages/tf2-sourcemod" >> "$GITHUB_OUTPUT"
              echo "variablePrefix=METAMOD" >> "$GITHUB_OUTPUT"
              ;;
            sourcemod)
              echo "package_name=SourceMod" >> "$GITHUB_ENV"
              echo "packagePath=packages/tf2-sourcemod" >> "$GITHUB_OUTPUT"
              echo "variablePrefix=SOURCEMOD" >> "$GITHUB_OUTPUT"
              ;;
            etf2l_configs)
              echo "package_name=ETF2L.org gameserver configs" >> "$GITHUB_ENV"
              echo "packagePath=packages/tf2-competitive" >> "$GITHUB_OUTPUT"
              echo "variablePrefix=ETF2L_CONFIGS" >> "$GITHUB_OUTPUT"
              ;;
            f2_sourcemod_plugins)
              echo "package_name=F2's SourceMod plugins" >> "$GITHUB_ENV"
              echo "packagePath=packages/tf2-competitive" >> "$GITHUB_OUTPUT"
              echo "variablePrefix=F2_SOURCEMOD_PLUGINS" >> "$GITHUB_OUTPUT"
              ;;
            tf2_comp_fixes)
              echo "package_name=TF2 Competitive Fixes" >> "$GITHUB_ENV"
              echo "packagePath=packages/tf2-competitive" >> "$GITHUB_OUTPUT"
              echo "variablePrefix=COMP_FIXES" >> "$GITHUB_OUTPUT"
              ;;
            *)
              echo "invalid package"
              exit 1
              ;;
          esac
  
  generate-checksum:
    runs-on: ubuntu-latest
    needs: resolve-package-variables
    outputs:
      packageUrl: ${{ steps.generate-checksum.outputs.packageUrl }}
      packageChecksum: ${{ steps.generate-checksum.outputs.packageChecksum }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: generate-checksum
        name: generate-checksum
        env:
          PACKAGE_PATH: ${{ needs.resolve-package-variables.outputs.packagePath }}
          VARIABLE_PREFIX: ${{ needs.resolve-package-variables.outputs.variablePrefix }}
        run: |
          PACKAGE_URL=$(grep -r "ARG ${{env.VARIABLE_PREFIX}}" ${{env.PACKAGE_PATH}}/Dockerfile | sed -E 's/^ARG\s(.+)=(.+)$/\1="\2"/g' | { eval "$(cat -)"; echo ${${{env.VARIABLE_PREFIX}}_URL}; })
          PACKAGE_CHECKSUM=$(wget -O - "$PACKAGE_URL" | tee file | sha256sum | awk '{print $1}' && rm file)
          echo "packageUrl=${PACKAGE_URL}" >> "$GITHUB_ENV"
          echo "packageChecksum=${PACKAGE_CHECKSUM}" >> "$GITHUB_ENV"

  update-version:
    runs-on: ubuntu-latest
    needs: [resolve-package-variables, generate-checksum]
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Replace version and checksum
        env:
          PACKAGE_PATH: ${{ needs.resolve-package-variables.outputs.packagePath }}
          PACKAGE_VERSION: ${{ inputs.version }}
          PACKAGE_CHECKSUM: ${{ needs.generate-checksum.outputs.packageChecksum }}
          VARIABLE_PREFIX: ${{ needs.resolve-package-variables.outputs.variablePrefix }}
        run: |
          sed -i 's/${{env.VARIABLE_PREFIX}}_VERSION=.*/${{env.VARIABLE_PREFIX}}_VERSION=${{env.PACKAGE_VERSION}}/' ${{env.PACKAGE_PATH}}/Dockerfile
          sed -i 's/${{env.VARIABLE_PREFIX}}_CHECKSUM=.*/${{env.VARIABLE_PREFIX}}_CHECKSUM=${{env.PACKAGE_CHECKSUM}}/' ${{env.PACKAGE_PATH}}/Dockerfile
    
      - name: Create pull request
        uses: peter-evans/create-pull-request@v7
        env:
          PACKAGE_NAME: ${{ needs.resolve-package-variables.outputs.packageName }}
          PACKAGE_CHECKSUM: ${{ needs.generate-checksum.outputs.packageChecksum }}
          PACKAGE_URL: ${{ needs.generate-checksum.outputs.packageUrl }}
          PACKAGE_VERSION: ${{ inputs.version }}
        with:
          commit-message: "fix(deps): update ${{env.PACKAGE_NAME}} to version ${{env.PACKAGE_VERSION}}"
          sign-commits: true
          title: "fix(deps): update ${{env.PACKAGE_NAME}} to version ${{env.PACKAGE_VERSION}}"
          body: |
            Update [${{env.PACKAGE_NAME}}](${{env.PACKAGE_URL}}) to version ${{env.PACKAGE_VERSION}}
            SHA256: ${{env.PACKAGE_CHECKSUM}}
          branch: update-${{inputs.package}}-${{env.PACKAGE_VERSION}}
          delete-branch: true
          reviewers: garrappachc
